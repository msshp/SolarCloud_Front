import { Projection } from '@yandex/ymaps3-types/common/types';
import { PropType, SlotsType } from 'vue';

declare const _default: import('vue').DefineComponent<{
    value: {
        type: PropType<Projection | null>;
        default: null;
    };
    modelValue: {
        type: PropType<Projection | null>;
        default: null;
    };
}, () => import('vue').VNode<import('vue').RendererNode, import('vue').RendererElement, {
    [key: string]: any;
}> | import('vue').VNodeArrayChildren, unknown, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    input(item: Projection): boolean;
    'update:modelValue'(item: Projection): boolean;
    hold(status: boolean): boolean;
}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    value: {
        type: PropType<Projection | null>;
        default: null;
    };
    modelValue: {
        type: PropType<Projection | null>;
        default: null;
    };
}>> & {
    onInput?: ((item: Projection) => any) | undefined;
    "onUpdate:modelValue"?: ((item: Projection) => any) | undefined;
    onHold?: ((status: boolean) => any) | undefined;
}, {
    value: Projection | null;
    modelValue: Projection | null;
}, SlotsType<{
    default: {};
}>>;
export default _default;
