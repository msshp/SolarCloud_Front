import { Projection } from '@yandex/ymaps3-types/common/types';
import { YMap, YMapEntity, YMapGroupEntity } from '@yandex/ymaps3-types';
import { Ref } from 'vue';

export declare function injectMap(): Ref<YMap | null>;
export declare function injectLayers(): Ref<any[]>;
export declare function waitTillYmapInit({ timeoutCallback, waitDuration, }?: {
    timeoutCallback?: (timeout: NodeJS.Timeout, isDelete: boolean) => any;
    waitDuration?: number | boolean;
}): Promise<void>;
export declare function waitTillMapInit({ map: _map, timeoutCallback, waitDuration, }?: {
    map?: Ref<YMap | null>;
    timeoutCallback?: (timeout: NodeJS.Timeout, isDelete: boolean) => any;
    waitDuration?: number | boolean;
}): Promise<void>;
export declare function deleteMapChild({ children, isMercator, root, }: {
    children: YMapEntity<unknown> | Projection;
    isMercator?: boolean;
    root: Ref<YMap | YMapGroupEntity<any> | any[] | null>;
}): void;
